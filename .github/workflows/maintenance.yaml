name: Maintenance

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    # Run the 1st of each month at midnight
    - cron: '0 0 1 * *'

jobs:
  lint_commits:
    # Lint commit messages failing if they're not conventional
    name: Lint commit messages
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - uses: wagoid/commitlint-github-action@v6

  pin_actions_and_docker_images:
    name: Pin Actions and Docker images
    runs-on: ubuntu-latest
    if: |
      contains(join(github.event.head_commit.modified, '\n'), '.github/workflows/') ||
      contains(join(github.event.commits.*.modified, '\n'), '.github/workflows/')
    permissions:
      contents: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23
      - name: Install Ratchet
        run: go install github.com/sethvargo/ratchet@latest
      - name: Pin
        run: ratchet pin ${{ github.workspace }}/.github/workflows/*.{yaml,yml}
      - name: Push changes if any
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            gpg --import <(echo "${{ secrets.BOT_GPG_PRIVATE_KEY_BASE64 }}" | base64 -d)
            git config user.name "github-actions-bot"
            git config user.email "github-actions-bot@users.noreply.github.com"
            git config user.signingkey "${{ secrets.BOT_GPG_KEY_ID }}"
            git config commit.gpgsign true
            git commit -am "ci: pin actions and Docker images in workflows"
            git push
          else
            echo "No changes to commit."
          fi

  update_dependencies:
    name: Update dependencies with Renovate PRs
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Install Renovate
        run: |
          npm install -g renovate
          gpg --import <(echo "${{ secrets.BOT_GPG_PRIVATE_KEY_BASE64 }}" | base64 -d)
          git config user.name "github-actions-bot"
          git config user.email "github-actions-bot@users.noreply.github.com"
          git config user.signingkey "${{ secrets.BOT_GPG_KEY_ID }}"
          git config commit.gpgsign true
      - name: Run Renovate
        env:
          RENOVATE_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: renovate --config-file=${{ github.workspace }}/.security/renovate.yaml

  cleanup_branches:
    name: Branch Cleaner
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Check stale branches
        id: branch_cleaner
        uses: crazy-matt/manage-stale-branches@1.0.2
        with:
          gh_token: ${{ secrets.GITHUB_TOKEN }}
          stale_older_than: 100
          suggestions_older_than: 210
          dry_run: true
          archive_stale: true
          excluded_branches: |
            origin/main
            origin/badges
      - name: Send notification
        if: github.event_name == 'schedule' && steps.branch_cleaner.outputs.message != ''
        run: |
          curl -s \
            --form-string "token=${{ secrets.PUSHOVER_API_TOKEN }}" \
            --form-string "user=${{ secrets.PUSHOVER_USER_KEY }}" \
            --form-string "message=${{ steps.branch_cleaner.outputs.message }}" \
            --form-string "title=${{ github.repository }} Stale Branches Cleanup" \
            --form-string "url=https://github.com/${{ github.repository }}/branches/all" \
            https://api.pushover.net/1/messages.json
