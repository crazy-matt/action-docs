# https://taskfile.dev
# A modern replacement of Makefile
version: '3'

includes:
  docker:
    taskfile: ./docker/Taskfile.yml
    dir: ./docker
    optional: true

vars:
  REPO_ABS_ROOT_PATH:
    sh: git rev-parse --show-toplevel

tasks:
  default:
    cmds:
    - task --list
    silent: true

  debug:
    desc: Run all debug tasks
    cmds:
    - task: debug:resolve_vars
    silent: true

  debug:resolve_vars:
    desc: Output few things which can help debugging
    cmds:
    - echo "Absolute path":" {{.REPO_ABS_ROOT_PATH}}"
    silent: true

  security:
    desc: Run all security scanners
    cmds:
    - task: security:filesystem:grype
    - task: security:secret:gitleaks
    silent: true

  security:filesystem:grype:
    desc: Run Grype (Filesystem Vulnerability Scanner)
    cmds:
    - plugin_name="grype"; asdf plugin add "${plugin_name}" || true; asdf install "${plugin_name}" $(asdf current "${plugin_name}" | tr -s ' ' | cut -d' ' -f2)
    - grype "dir:." --output table --config .security/grype.yaml
    # - |
    #   if [[ "{{.CLI_ARGS}}" == *"sarif"* ]]; then
    #     grype "dir:." --output template --template "/tmp/grype-sarif.tpl" --file "grype-report.sarif" --config .security/grype.yaml
    #   then
    # For SARIF report generation, implement the GitHub Action:
    # - name: Scan current project
    #   id: scan
    #   uses: anchore/scan-action@v3.2.0
    #   with:
    #     path: "./"
    #     fail-build: true
    #     acs-report-enable: true
    silent: true

  security:secret:gitleaks:
    desc: Run Gitleaks
    cmds:
    - |
      if [[ "{{.CLI_ARGS}}" == *"sarif"* ]]; then
        docker run --rm --volume "{{.REPO_ABS_ROOT_PATH}}:/work" zricethezav/gitleaks:latest detect -v --redact --report-format "sarif" --report-path gitleaks-report.sarif --source="/work" --config /work/.security/credscan-config.toml
      else
        docker run --rm --volume "{{.REPO_ABS_ROOT_PATH}}:/work" zricethezav/gitleaks:latest detect -v --redact --source="/work" --config /work/.security/credscan-config.toml
      fi
    silent: true

  lint:
    desc: Run all linters
    cmds:
    - task: lint:markdown:markdownlint
    - task: lint:yaml:yamllint
    silent: true

  lint:markdown:markdownlint:
    desc: Lint Markdown files
    cmds:
    - docker run --rm --volume "{{.REPO_ABS_ROOT_PATH}}:/work" tmknom/markdownlint:latest --config .linters/markdown-linter.yml --ignore CHANGELOG.md --ignore tests/ .
    silent: true

  lint:yaml:yamllint:
    desc: Lint YAML files
    cmds:
    - docker run --rm --volume "{{.REPO_ABS_ROOT_PATH}}:/work" tmknom/yamllint:latest --config-file .linters/yaml-linter.yml .
    silent: true
